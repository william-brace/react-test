[{"/Users/williambrace/Projects/react-test/src/index.js":"1","/Users/williambrace/Projects/react-test/src/App.js":"2","/Users/williambrace/Projects/react-test/src/reportWebVitals.js":"3","/Users/williambrace/Projects/react-test/src/components/counter.jsx":"4","/Users/williambrace/Projects/react-test/src/components/counters.jsx":"5"},{"size":547,"mtime":1608248482761,"results":"6","hashOfConfig":"7"},{"size":546,"mtime":1607997370830,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607996901937,"results":"9","hashOfConfig":"7"},{"size":1083,"mtime":1608324405227,"results":"10","hashOfConfig":"7"},{"size":1257,"mtime":1608324724443,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kpuhht",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/williambrace/Projects/react-test/src/index.js",["24"],"/Users/williambrace/Projects/react-test/src/App.js",[],["25","26"],"/Users/williambrace/Projects/react-test/src/reportWebVitals.js",[],"/Users/williambrace/Projects/react-test/src/components/counter.jsx",[],"/Users/williambrace/Projects/react-test/src/components/counters.jsx",["27","28"],"import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  handleIncrement = (counterId) => {\n    console.log(counterId);\n    const counters = this.state.counters.map((c) => {\n      if (c.id == counterId) this.setState({ counters });\n    });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n\n    this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"btn-sm btn-danger m-2\"\n          onClick={this.handleIncrement}\n        >\n          Reset\n        </button>\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Counters;\n",{"ruleId":"29","severity":1,"message":"30","line":5,"column":8,"nodeType":"31","messageId":"32","endLine":5,"endColumn":11},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":16,"column":50,"nodeType":"39","messageId":"40","endLine":16,"endColumn":52},{"ruleId":"41","severity":1,"message":"42","line":17,"column":16,"nodeType":"43","messageId":"44","endLine":17,"endColumn":18},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]